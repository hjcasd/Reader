if (isRunModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

def config = rootProject.ext.android
def lib = rootProject.ext.dependencies


android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        if (isRunModule.toBoolean()) {
            applicationId "com.hjc.learn.main"
        }
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构(必须设置如下几种,否则X5会初始化失败)
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']

            // 单独调试与集成调试时使用不同的 AndroidManifest.xml 文件
            if (isRunModule.toBoolean()) {
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
}

dependencies {

    testImplementation lib.junit
    androidTestImplementation lib.test_junit
    androidTestImplementation lib.espresso_core

    kapt lib.arouter_compiler
    implementation lib.bga_qrcode_zxing
    implementation lib.room_runtime
    kapt lib.room_compiler

    implementation project(path: ':library-common')
}